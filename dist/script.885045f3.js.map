{"version":3,"sources":["scripts/task.js","scripts/board.js","script.js"],"names":["Task","$taskName","$dueDate","$eta","$completionTime","$priority","$completionStatus","$board","taskName","dueDate","eta","completionTime","priority","completionStatus","board","taskID","allTasks","length","taskDiv","document","createElement","setAttribute","taskText","textContent","appendChild","taskDate","deleteButton","taskObject","addEventListener","removeTask","tasks","innerHTML","newTask","push","render","console","log","forEach","task","unRender","$event","alert","currentTarget","result","filter","unrenderAll","renderAll","getElementById","value","add","boardObject","$theBoard","name","cardDiv","cardForm","cardName","cardDueDate","cardETA","cardCompletionTime","saveButton","saveTask","boardLane","Board","allBoards","boardID","container","boardLabel","addTaskButton","taskAddUI","newBoard","$containerId","taskAddForm","button","style","visibility","toDo","doing","done","addTask","renderAllHandler"],"mappings":"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","file":"script.885045f3.js","sourceRoot":"..\\public","sourcesContent":["export default class Task {\r\n    \r\n    /************************************************************************\r\n     *      static is common to all instances since they're called          *\r\n     *      on the class itself.                                            */\r\n    static allTasks = [];\r\n   \r\n    static add(\r\n                $taskName, \r\n                $dueDate, \r\n                $eta, \r\n                $completionTime, \r\n                $priority, \r\n                $completionStatus,\r\n                $board)\r\n                {\r\n                    /* create a new task using the supplied info */\r\n                var newTask = new Task( $taskName, \r\n                                        $dueDate, \r\n                                        $eta, \r\n                                        $completionTime, \r\n                                        $priority, \r\n                                        $completionStatus,\r\n                                        $board);\r\n                \r\n                //newTask.unRender();\r\n               // newTask.render();\r\n                /* add the newly created task into the task list */        \r\n                Task.allTasks.push(newTask);\r\n                newTask.render();\r\n               console.log(Task.allTasks.length);\r\n\r\n                //if(Task.allTasks.length <5)\r\n                //return true;\r\n\r\n                //Task.unrenderAll();\r\n                //Task.renderAll();\r\n    }\r\n\r\n    static renderAll(){\r\n       // let container = document.getElementById();\r\n        Task.allTasks.forEach(function(task){\r\n            task.render();\r\n          });\r\n    }  \r\n\r\n    static unrenderAll(){\r\n        // let container = document.getElementById();\r\n         Task.allTasks.forEach(function(task){\r\n             task.unRender();\r\n           });\r\n     }\r\n\r\n    static removeTask($event){        \r\n        \r\n       // console.log($event);\r\n       // console.log($event.currentTarget);\r\n       // console.log($event.currentTarget.taskObject);\r\n\r\n        alert(\"Delete Task '\" + $event.currentTarget.taskID + \"' ?\");\r\n        //Task.allTasks.pop();\r\n\r\n\r\n        const result = Task.allTasks.filter(task => task.taskID != $event.currentTarget.taskObject.taskID);\r\n\r\n        Task.allTasks = result;\r\n\r\n        Task.unrenderAll();\r\n        Task.renderAll();\r\n       \r\n    }\r\n\r\n    static saveTask($event){        \r\n        \r\n        \r\n\r\n         let $taskName =  document.getElementById(\"cardName\").value;\r\n         let $dueDate = document.getElementById(\"cardDueDate\").value;\r\n         let $eta = \"3days\";\r\n         let $completionTime = \"\"; \r\n         let $priority = \"3\";\r\n         let $completionStatus = \"new\";\r\n\r\n         \r\n         Task.add(\r\n            $taskName, \r\n            $dueDate, \r\n            $eta, \r\n            $completionTime, \r\n            $priority, \r\n            $completionStatus,\r\n            $event.currentTarget.boardObject);\r\n            \r\n\r\n            \r\n        \r\n     }\r\n\r\n    /************************************************************************\r\n     *      specific to the object instances                                *\r\n     *                                                                      */\r\n    constructor(\r\n        $taskName, \r\n        $dueDate, \r\n        $eta, \r\n        $completionTime, \r\n        $priority, \r\n        $completionStatus,\r\n        $board)\r\n        {\r\n        this.taskName = $taskName;\r\n        this.dueDate = $dueDate,\r\n        this.eta = $eta;\r\n        this.completionTime = $completionTime;\r\n        this.priority = $priority;\r\n        this.completionStatus = $completionStatus;\r\n        this.board = $board;\r\n        // Give a unique id for each task\r\n        this.taskID = Task.allTasks.length + 1;\r\n\r\n        }\r\n\r\n \r\n\r\n    render()  {      \r\n\r\n\r\n\r\n        let taskDiv =  document.createElement('div');\r\n        taskDiv.setAttribute('class','card');\r\n\r\n        let taskText = document.createElement('h3');\r\n        taskText.textContent = this.taskName;\r\n        taskDiv.appendChild(taskText);\r\n\r\n        let taskDate = document.createElement('p');\r\n        taskDate.textContent = this.dueDate;\r\n        taskDiv.appendChild(taskDate);\r\n\r\n        let deleteButton = document.createElement('button');\r\n        deleteButton.textContent = \"Delete Task\";        \r\n\r\n        /* I need a reference of the task object(this) that created this delete button */\r\n        /* taskObject is to remeber this when we move out of the context */\r\n        deleteButton.taskObject = this;\r\n\r\n        deleteButton.addEventListener('click',Task.removeTask,false);        \r\n        taskDiv.appendChild(deleteButton);\r\n\r\n        this.board.tasks.appendChild(taskDiv);\r\n\r\n       // alert('Rendered!');\r\n        \r\n\r\n    }\r\n\r\n    unRender() {\r\n        this.board.tasks.innerHTML = '';\r\n    }\r\n\r\n  static taskAddForm($theBoard){\r\n      \r\n    alert('Created by ' + $theBoard.name) ;\r\n\r\n        let cardDiv =  document.createElement('div');\r\n        cardDiv.setAttribute('class','card card-form-div');\r\n\r\n        let cardForm = document.createElement('div');\r\n        cardForm.setAttribute ('id', 'cardForm');\r\n        cardDiv.appendChild(cardForm);\r\n\r\n        let cardName = document.createElement('input');\r\n        cardName.setAttribute ('id', 'cardName');\r\n        cardName.setAttribute('type','text');\r\n        cardForm.appendChild(cardName);\r\n\r\n        let cardDueDate = document.createElement('input');\r\n        cardDueDate.setAttribute('id','cardDueDate');\r\n        cardDueDate.setAttribute('type','date');\r\n        cardForm.appendChild(cardDueDate);\r\n\r\n        let cardETA = document.createElement('input');\r\n        cardETA.setAttribute('id','cardETA');\r\n        cardETA.setAttribute('type','date');\r\n        cardForm.appendChild(cardETA);\r\n\r\n        let cardCompletionTime = document.createElement('input');\r\n        cardCompletionTime.setAttribute('id','cardCompletionTime');\r\n        cardForm.appendChild(cardCompletionTime)\r\n\r\n        let saveButton = document.createElement('button');\r\n        saveButton.textContent = \"Save\";      \r\n        saveButton.boardObject = $theBoard;         \r\n\r\n        saveButton.addEventListener('click',Task.saveTask,false);        \r\n        cardForm.appendChild(saveButton);\r\n\r\n\r\n\r\n        $theBoard.boardLane.appendChild(cardDiv);\r\n\r\n    }\r\n}\r\n","import Task from './task';\r\nexport default class Board {\r\n    \r\n    /************************************************************************\r\n     *      static is common to all instances                               *\r\n     *                                                                      */\r\n    static allBoards = [];\r\n   \r\n    static add(name){\r\n        var newBoard = new Board(name);\r\n        Board.allBoards.push(newBoard);\r\n        return newBoard;\r\n    }\r\n    static renderAll($containerId){\r\n        let container = document.getElementById($containerId);\r\n        Board.allBoards.forEach(function(board){\r\n            board.render(container);\r\n          });\r\n    }  \r\n\r\n    static taskAddUI($event){\r\n        //alert($event.currentTarget.boardObject.name);\r\n        Task.taskAddForm($event.currentTarget.boardObject);\r\n        \r\n    }\r\n    \r\n    /************************************************************************\r\n     *      specific to the object instances                                *\r\n     *                                                                      */\r\n    constructor(name) {\r\n          \r\n\r\n        this.name = name;\r\n        if(Task.allBoards){\r\n        this.boardID = Task.allBoards.length + 1;\r\n        }\r\n                  \r\n    }\r\n\r\n    addTask(\r\n        $taskName, \r\n        $dueDate, \r\n        $eta, \r\n        $completionTime, \r\n        $priority, \r\n        $completionStatus        \r\n    )\r\n    {\r\n        Task.add(\r\n            $taskName, \r\n            $dueDate, \r\n            $eta, \r\n            $completionTime, \r\n            $priority, \r\n            $completionStatus,\r\n            this);\r\n            \r\n    }\r\n\r\n    render(container)  {\r\n\r\n\r\n\r\n /* add a swimline (column) as a board */\r\n        this.boardLane =  document.createElement('div');\r\n        this.boardLane.setAttribute('class','board');\r\n\r\n        /* add a label for the board */ \r\n        let boardLabel =  document.createElement('div');\r\n        boardLabel.setAttribute('class','label');\r\n        boardLabel.innerHTML =  this.name;\r\n\r\n        this.boardLane.appendChild(boardLabel);\r\n        \r\n\r\n        /* add a Task Add button for the borard */\r\n        /* <input type=\"button\" name=\"addTask\" id=\"addTask\" value=\"Add\"> */\r\n        let addTaskButton = document.createElement('button');\r\n        addTaskButton.textContent = \"+\";\r\n        addTaskButton.boardObject = this;\r\n        addTaskButton.addEventListener('click',Board.taskAddUI,false);\r\n        this.boardLane.appendChild(addTaskButton);\r\n\r\n\r\n        /* add a label for the board */\r\n        this.tasks =  document.createElement('div');\r\n        this.tasks.setAttribute('class','all-tasks');\r\n        this.tasks.innerHTML =  \"Put all tasks in here!\";\r\n\r\n        this.boardLane.appendChild(this.tasks);\r\n\r\n\r\n        container.appendChild(this.boardLane);\r\n\r\n    }\r\n}\r\n","import Board from './scripts/board';\r\nimport Task from './scripts/task';\r\n \r\n//console.log('Blah!');\r\n\r\nlet button = document.getElementById(\"show-hide-task-form\");\r\nbutton.addEventListener(\"click\", function(){\r\n  \r\n  if(document.getElementById(\"taskEntryForm\").style.visibility == 'hidden'){\r\n    document.getElementById(\"taskEntryForm\").style.visibility  = 'visible';\r\n    }\r\n  else {\r\n    document.getElementById(\"taskEntryForm\").style.visibility  = 'hidden';\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n/* test data */\r\n\r\nlet $taskName = \"TEST Task\"; \r\nlet $dueDate = \"17/05/20201\";\r\nlet $eta = \"3days\";\r\nlet $completionTime = \"\"; \r\nlet $priority = \"3\";\r\nlet $completionStatus = \"new\";\r\n                         \r\n\r\n\r\n let toDo = Board.add('Todo');\r\n \r\n //console.log(\"object name \" + toDo.name);\r\n //console.log(\"object id \" + toDo.name);\r\n\r\n let doing =  Board.add('Doing');\r\n let done = Board.add('Done'); \r\n  \r\n  Board.renderAll('container');\r\n\r\n  $taskName = \"I will to next\"; \r\n  toDo.addTask(  $taskName, $dueDate, $eta,  $completionTime,   $priority,  $completionStatus   );\r\n\r\n  $taskName = \"Working on\"; \r\n  doing.addTask( $taskName, $dueDate, $eta,  $completionTime,   $priority,  $completionStatus  );\r\n\r\n  $taskName = \"Working on Another Task\"; \r\n  doing.addTask( $taskName, $dueDate, $eta,  $completionTime,   $priority,  $completionStatus  );\r\n\r\n\r\n  $taskName = \"Already Done\"; \r\n  done.addTask( $taskName, $dueDate, $eta,  $completionTime,   $priority,  $completionStatus  );\r\n\r\n // Task.renderAll();\r\n\r\n\r\n\r\n  \r\nlet addTaskButton = document.getElementById(\"addTask\");\r\naddTaskButton.addEventListener(\"click\", function(){\r\n        let $taskName = document.getElementById(\"taskName\").value; \r\n        let $dueDate = document.getElementById(\"dueDate\").value;\r\n        let $eta = \"3days\";\r\n        let $completionTime = \"\"; \r\n        let $priority = \"3\";\r\n        let $completionStatus = \"new\";\r\n        toDo.addTask(  $taskName, $dueDate, $eta,  $completionTime,   $priority,  $completionStatus   );                     \r\n        //Task.renderAll();\r\n        }\r\n      );\r\n\r\n\r\nlet renderAllHandler = document.getElementById(\"renderAll\");\r\nrenderAllHandler.addEventListener(\"click\", function(){\r\n        Task.unrenderAll();\r\n        Task.renderAll();\r\n    }\r\n);\r\n \r\n  \r\n  "]}